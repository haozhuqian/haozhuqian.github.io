<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文档规范</title>
    <link href="/2023/01/14/%E6%96%87%E6%A1%A3%E8%A7%84%E8%8C%83/"/>
    <url>/2023/01/14/%E6%96%87%E6%A1%A3%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h2 id="统一规范的必要性"><a href="#统一规范的必要性" class="headerlink" title="统一规范的必要性"></a>统一规范的必要性</h2><blockquote><p>统一中文文案、排版的相关用法，可以降低团队成员之间的沟通成本，增强网站气质。</p><p>——来自<a href="https://mazhuang.org/">mazhuang.org</a></p></blockquote><p>优秀的文档应当有统一的规范，从目录结构，书写方式，列表的用法等等方面应当做到便于理解与统一。</p><p>或许这些规范都是一些小细节，但希望大家在写新文档时可以参考一下。有不同意见可以经过讨论后修改本文档。</p><p>同时本文的建议不仅适用于作业文档，大家在写教程或者笔记时也可以参考。</p><h2 id="大纲结构"><a href="#大纲结构" class="headerlink" title="大纲结构"></a>大纲结构</h2><p>常用的 typora 可以选择打开 视图 -&gt; 大纲 以清晰的了解文档结构并进行导航，而为了优化体验有如下建议：</p><h3 id="1-设置下级标题"><a href="#1-设置下级标题" class="headerlink" title="1.设置下级标题"></a>1.设置下级标题</h3><p>各级标题的作用可以认为是讲文档内容切割细分，以方便各取所需或者更快地找到想要的部分，为了实现这一点我们应当适当地设置各级标题。例如在往期作业文档中，对视频资料，文本资料也设置一个标题，可以方便快速找到学员需要的部分。</p><p>尽量不要出现一段文字没有所属标题，比如未添加前言标题，而直接在文档开头直接插入前言，对文档整体的阅读体验与结构梳理并不好。</p><p>文档一般设置四到五级标题最好，否则过于深层的嵌套目录同样会树立阅读障碍。</p><h3 id="2-各级标题字数"><a href="#2-各级标题字数" class="headerlink" title="2.各级标题字数"></a>2.各级标题字数</h3><p>除一级标题外，各级标题不宜过长，否则大纲目录显示时效果不佳，也导致导航体验不好，同时精炼标题语言，而更细化的要求，比如要求掌握，了解，还是回顾，重点学习哪些内容，哪些不重要等等，可以写在该标题下，例如：</p><p>在文档 全栈方向第七次学习任务&amp;作业.md 中 <strong>掌握 JavaScript 对象相关的知识，并学习 JavaScript 的内置对象</strong>，作为原有的三级标题，显示在大纲中过于臃肿，不方便扫一眼就能识别。可以修改为这部分内容标题为 <strong>JS对象与内置对象</strong> 更加一目了然，同时由于上一级标题已经写明 学习任务 那么在这一级标题可以将 学习 等字样精简。</p><p>理想的副标题（此处指除一级标题外的标题）应当尽量不超过十个字左右（非强制要求，言简意赅即可），这样做的目的就是使文档大纲结构清晰。</p><h3 id="3-标题序号"><a href="#3-标题序号" class="headerlink" title="3.标题序号"></a>3.标题序号</h3><p>为了体现文档的整体结构与逻辑，可以适当的在需要的地方的标题前添加序号（例如此处的三级标题）。可以在大纲目录中形成类似有序列表的效果。</p><h2 id="段落结构"><a href="#段落结构" class="headerlink" title="段落结构"></a>段落结构</h2><h3 id="1-段落字数"><a href="#1-段落字数" class="headerlink" title="1.段落字数"></a>1.段落字数</h3><p>段落字数不宜过长，超过<strong>300字</strong>的一整段会在视觉与心理上给人造成压力，尽量根据内容将过于冗长的段落切割成多段，通常阅读时人只会对一整段话留下一个印象，过长的段落会使得印象模糊，信息丢失，多段落书写的节奏感可以给人更多的印象与记忆点。</p><h3 id="2-重点突出"><a href="#2-重点突出" class="headerlink" title="2.重点突出"></a>2.重点突出</h3><p>对于<strong>段落主旨</strong>或<strong>关键字</strong>我们可以适当加粗，加粗的简单突出效果可以避免阅读者遗漏重点，而反复阅读浪费时间，同时对于分条列出的列表应当尽量将<strong>重要事项靠前</strong>。比如作业提交注意事项中，第一次尝试仓库pr提交代码时，可以讲提交教程靠前，提前阅读，减少操作出错。而在之后的提交中，应当重点突出的则是截止时间，因此可以在列表第一条说明时间。以上举例都旨在说明，应当在阅读者注意力分散之前，让人尽早注意到重点。减少信息丢失与无效输出。</p><h2 id="书写规范"><a href="#书写规范" class="headerlink" title="书写规范"></a>书写规范</h2><h3 id="中英文混写"><a href="#中英文混写" class="headerlink" title="中英文混写"></a>中英文混写</h3><blockquote><p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。与大家共勉之。」</p><p>——<a href="https://github.com/vinta/pangu.js">vinta&#x2F;paranoid-auto-spacing</a></p></blockquote><p>在日常书写文档时常出现中英文混写的情况，推荐在中文与英文之间用一个空格位隔开，这里介绍一种比较朴素的替换方式：在vscode中利用正则表达式进行替换。</p><h4 id="正则表达式替换"><a href="#正则表达式替换" class="headerlink" title="正则表达式替换"></a>正则表达式替换</h4><p>在vscode侧边栏图标中第二个搜索标识中，第一个搜索框为需要匹配的字符串。</p><p>如图打开第一个搜索框最后一个选项即可开始<strong>正则匹配</strong>，</p><p><img src="https://good-money.oss-cn-beijing.aliyuncs.com/blog-imgs/202301131826244.png" alt="image-20230113182645150"></p><p>图中匹配的正则表达式为：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">([<span class="hljs-character">\u4e00</span>-<span class="hljs-character">\u9fa5</span>]+)([A-Za-z]+)([<span class="hljs-character">\u4e00</span>-<span class="hljs-character">\u9fa5</span>]+)<br></code></pre></td></tr></table></figure><p>该表达式将匹配到连续中文，英文单词与中文的情况，例如：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">我超爱JavaScript啦<br></code></pre></td></tr></table></figure><p>这一句中会匹配到：爱JavaScript啦</p><p><img src="https://good-money.oss-cn-beijing.aliyuncs.com/blog-imgs/202301131826244.png" alt="image-20230113182645150"></p><p>第二个搜索框中为替换的字符串，其中的$1匹配了([\u4e00-\u9fa5]+)，$2匹配了([A-Za-z]+)，以此类推，</p><p>点击第二个搜索框后的按钮 <img src="https://good-money.oss-cn-beijing.aliyuncs.com/blog-imgs/202301131927786.png" alt="image-20230113192707744"> 即可进行替换啦。</p><p>搜索框中的 “$1 $2 $3” 会将匹配到的 “$1$2$3”替换掉。</p><p>相当于我们将原本相邻的 <strong>爱JavaScript啦</strong> 替换为 <strong>爱 JavaScript 啦</strong> 。</p><p>同理我们也可以用</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">$1 $2<br></code></pre></td></tr></table></figure><p>替换</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">([<span class="hljs-character">\u4e00</span>-<span class="hljs-character">\u9fa5</span>]+)([A-Za-z]+)<br></code></pre></td></tr></table></figure><p>在前中文后英文的情况下添加空格</p><p>或者用</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">$1 $2<br></code></pre></td></tr></table></figure><p>替换</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">([A-Za-z]+)([<span class="hljs-character">\u4e00</span>-<span class="hljs-character">\u9fa5</span>]+)<br></code></pre></td></tr></table></figure><p>在前英文后中文的情况下添加空格。</p><p>正则表达式替换的用处还有很多，比如去除注释，更改目标变量名，去除复制时出现的行号等等，在此不再赘述。</p><h3 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h3><p>主要注意事项</p><ol><li><p>在中文文本中应当尽量使用中文标点（全角字符），而不应当混杂英文标点（半角字符）；</p></li><li><p>遇到完整的英文整句、特殊名词，其內容使用半角标点；</p></li><li><p>专有名词使用正确的大小写，不要使用不地道的缩写；</p></li></ol><p>参考链接：<a href="https://mazhuang.org/wiki/chinese-copywriting-guidelines/">https://mazhuang.org/wiki/chinese-copywriting-guidelines/</a></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文仅供参考，目的在于尽可能构建可读性更高，样式更加统一的文档格式，如有问题，欢迎讨论。</p><p>就是这样 ~</p>]]></content>
    
    
    <categories>
      
      <category>规范</category>
      
    </categories>
    
    
    <tags>
      
      <tag>云顶书院</tag>
      
      <tag>文档规范</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
